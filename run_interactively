#!/bin/bash

## DEFAULT VALUES

# Pedigree info
T_DEF=3
N_DEF=10
B_DEF=100
A_DEF=7

# REC-GEN Info
TMP_FILE='.temp_recgen_file'
R_VERB=Y
S_DEF=0.21

# Tree diff info
T_VERB=Y
C_DEF=0.49

## CREATE A NEW PEDIGREE

# Take input
echo "Preparing to generate new pedigree... "
read -p "Number of generations [$T_DEF]:   " T
T=${T:-$T_DEF}
read -p "Founding individuals  [$N_DEF]:  " N
N=${N:-$N_DEF}
read -p "Number of blocks      [$B_DEF]: " B
B=${B:-$B_DEF}
read -p "Fertility rate alpha  [$A_DEF]:   " A
A=${A:-$A_DEF}

# Create pedigree
PED=$(bin/mkped -TNBA $T $N $B $A)
read -p "Done. Print pedigree? [y/N]: " p
p=${p:-N}
if [[ $p =~ [yY](es|ES)? ]]; then echo "$PED"; fi

## RUN REC-GEN

# Take input
echo "Preparing to run REC-GEN... "
read -p "Verbose output?       [Y/n]: " v
v=${v:-Y}

# Run REC-GEN
if [[ $v =~ [yY](es|ES)? ]]; then
    V='-v'
    echo "$PED" | bin/recgen $V -S $S_DEF | tee $TMP_FILE | grep -v '-'
    REC=$(awk '/DONE/,EOF' $TMP_FILE | tail -n +2)
else
    REC=$(echo "$PED" | bin/recgen -S $S_DEF)
fi
read -p "Done. Print pedigree? [y/N]: " r
r=${r:-N}
if [[ $r =~ [yY](es|ES)? ]]; then echo "$REC"; fi


## RUN TREE-DIFF

echo "Checking reconstruction accuracy..."
PED=$(echo "$PED" | ./chop_ped)
echo "$PED"$'\n'"$REC" | bin/treediff $V | ./outfmt
if [[ ! -z $V ]]; then rm "$TMP_FILE"; fi

## ANALYSIS

read -p "Analyze errors?       [Y/n]: " xe
xe=${xe:-Y}
if [[ $xe =~ [yY](es|ES)? ]]; then
    echo "Errors during reconstruction of first generation:"
    echo "$PED"$'\n'"$REC" | analysis/extant_errors.pl 'logs/rec-gen.dat' 'logs/tree-diff.dat'
fi
read -p "Graph block errors?   [Y/n]: " gb
gb=${gb:-Y}
if [[ $gb =~ [yY](es|ES)? ]]; then
    analysis/graph_blocks 'logs/tree-diff.dat' $T
    echo 'Placed graphs in `./rec-gen-graphs`'
fi
